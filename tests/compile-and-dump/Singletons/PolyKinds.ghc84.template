Singletons/PolyKinds.hs:(0,0)-(0,0): Splicing declarations
    singletons
      [d| class Cls (a :: k) where
            fff :: Proxy (a :: k) -> () |]
  ======>
    class Cls (a :: k) where
      fff :: Proxy (a :: k) -> ()
    type FffSym1 (t :: Proxy (a0123456789876543210 :: k0123456789876543210)) =
        Fff t
    instance SuppressUnusedWarnings FffSym0 where
      suppressUnusedWarnings
        = snd ((GHC.Tuple.(,) FffSym0KindInference) GHC.Tuple.())
    data FffSym0 (l :: TyFun (Proxy (a0123456789876543210 :: k0123456789876543210)) ()) :: GHC.Types.Type
      where
        FffSym0KindInference :: forall l arg.
                                SameKind (Apply FffSym0 arg) (FffSym1 arg) => FffSym0 l
    type instance Apply FffSym0 l = Fff l
    class PCls (a :: k) where
      type Fff (arg :: Proxy (a :: k)) :: ()
    class SCls (a :: k) where
      sFff ::
        forall (t :: Proxy (a :: k)).
        Sing t -> Sing (Apply FffSym0 t :: ())
    instance SCls a =>
             SingI (FffSym0 :: (~>) (Proxy (a :: k)) ()) where
      sing = (singFun1 @FffSym0) sFff
