Singletons/T312.hs:(0,0)-(0,0): Splicing declarations
    singletons
      [d| class Foo a where
            bar :: a -> b -> b
            bar _ x = x |]
  ======>
    class Foo a where
      bar :: a -> b -> b
      bar _ x = x
    type BarSym2 (t :: a0123456789876543210) (t :: b0123456789876543210) =
        Bar t t
    instance SuppressUnusedWarnings BarSym1 where
      suppressUnusedWarnings
        = snd ((GHC.Tuple.(,) BarSym1KindInference) GHC.Tuple.())
    data BarSym1 (l :: a0123456789876543210) (l :: TyFun b0123456789876543210 b0123456789876543210) :: GHC.Types.Type
      where
        BarSym1KindInference :: forall l l arg.
                                SameKind (Apply (BarSym1 l) arg) (BarSym2 l arg) => BarSym1 l l
    type instance Apply (BarSym1 l) l = Bar l l
    instance SuppressUnusedWarnings BarSym0 where
      suppressUnusedWarnings
        = snd ((GHC.Tuple.(,) BarSym0KindInference) GHC.Tuple.())
    data BarSym0 (l :: TyFun a0123456789876543210 ((~>) b0123456789876543210 b0123456789876543210)) :: GHC.Types.Type
      where
        BarSym0KindInference :: forall l arg.
                                SameKind (Apply BarSym0 arg) (BarSym1 arg) => BarSym0 l
    type instance Apply BarSym0 l = BarSym1 l
    type family Bar_0123456789876543210 (a :: a) (a :: b) :: b where
      Bar_0123456789876543210 _ x = x
    type Bar_0123456789876543210Sym2 (t :: a0123456789876543210) (t :: b0123456789876543210) =
        Bar_0123456789876543210 t t
    instance SuppressUnusedWarnings Bar_0123456789876543210Sym1 where
      suppressUnusedWarnings
        = snd
            ((GHC.Tuple.(,) Bar_0123456789876543210Sym1KindInference)
               GHC.Tuple.())
    data Bar_0123456789876543210Sym1 (l :: a0123456789876543210) (l :: TyFun b0123456789876543210 b0123456789876543210) :: GHC.Types.Type
      where
        Bar_0123456789876543210Sym1KindInference :: forall l l arg.
                                                    SameKind (Apply (Bar_0123456789876543210Sym1 l) arg) (Bar_0123456789876543210Sym2 l arg) =>
                                                    Bar_0123456789876543210Sym1 l l
    type instance Apply (Bar_0123456789876543210Sym1 l) l = Bar_0123456789876543210 l l
    instance SuppressUnusedWarnings Bar_0123456789876543210Sym0 where
      suppressUnusedWarnings
        = snd
            ((GHC.Tuple.(,) Bar_0123456789876543210Sym0KindInference)
               GHC.Tuple.())
    data Bar_0123456789876543210Sym0 (l :: TyFun a0123456789876543210 ((~>) b0123456789876543210 b0123456789876543210)) :: GHC.Types.Type
      where
        Bar_0123456789876543210Sym0KindInference :: forall l arg.
                                                    SameKind (Apply Bar_0123456789876543210Sym0 arg) (Bar_0123456789876543210Sym1 arg) =>
                                                    Bar_0123456789876543210Sym0 l
    type instance Apply Bar_0123456789876543210Sym0 l = Bar_0123456789876543210Sym1 l
    class PFoo (a :: GHC.Types.Type) where
      type Bar (arg :: a) (arg :: b) :: b
      type Bar a a = Apply (Apply Bar_0123456789876543210Sym0 a) a
    class SFoo a where
      sBar ::
        forall b (t :: a) (t :: b).
        Sing t -> Sing t -> Sing (Apply (Apply BarSym0 t) t :: b)
      default sBar ::
                forall b (t :: a) (t :: b).
                (Apply (Apply BarSym0 t) t :: b) ~ Apply (Apply Bar_0123456789876543210Sym0 t) t =>
                Sing t -> Sing t -> Sing (Apply (Apply BarSym0 t) t :: b)
      sBar _ (sX :: Sing x) = sX
    instance SFoo a => SingI (BarSym0 :: (~>) a ((~>) b b)) where
      sing = (singFun2 @BarSym0) sBar
    instance (SFoo a, SingI d) =>
             SingI (BarSym1 (d :: a) :: (~>) b b) where
      sing = (singFun1 @(BarSym1 (d :: a))) (sBar (sing @_ @d))
