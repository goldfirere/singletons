Singletons/T33.hs:(0,0)-(0,0): Splicing declarations
    singletons
      [d| foo :: (Bool, Bool) -> ()
          foo ~(_, _) = () |]
  ======>
    foo :: (Bool, Bool) -> ()
    foo ~(_, _) = GHC.Tuple.()
    type FooSym1 (t :: (Bool, Bool)) = Foo t
    instance SuppressUnusedWarnings FooSym0 where
      suppressUnusedWarnings
        = snd ((GHC.Tuple.(,) FooSym0KindInference) GHC.Tuple.())
    data FooSym0 (l :: TyFun (Bool, Bool) ()) :: GHC.Types.Type
      where
        FooSym0KindInference :: forall l arg.
                                SameKind (Apply FooSym0 arg) (FooSym1 arg) => FooSym0 l
    type instance Apply FooSym0 l = Foo l
    type family Foo (a :: (Bool, Bool)) :: () where
      Foo (GHC.Tuple.(,) _ _) = Tuple0Sym0
    sFoo ::
      forall (t :: (Bool, Bool)). Sing t -> Sing (Apply FooSym0 t :: ())
    sFoo (STuple2 _ _) = STuple0
    instance SingI (FooSym0 :: (~>) (Bool, Bool) ()) where
      sing = (singFun1 @FooSym0) sFoo

Singletons/T33.hs:0:0: warning:
    Lazy pattern converted into regular pattern in promotion
  |
6 | $(singletons [d|
  |   ^^^^^^^^^^^^^^...

Singletons/T33.hs:0:0: warning:
    Lazy pattern converted into regular pattern during singleton generation.
  |
6 | $(singletons [d|
  |   ^^^^^^^^^^^^^^...
