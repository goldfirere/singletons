Singletons/T197.hs:(0,0)-(0,0): Splicing declarations
    singletons
      [d| infixl 5 $$:
          
          ($$:) :: Bool -> Bool -> Bool
          _ $$: _ = False |]
  ======>
    infixl 5 $$:
    ($$:) :: Bool -> Bool -> Bool
    ($$:) _ _ = False
    type ($$:@#@$$$) (a0123456789876543210 :: Bool) (a0123456789876543210 :: Bool) =
        ($$:) a0123456789876543210 a0123456789876543210
    instance SuppressUnusedWarnings (($$:@#@$$) a0123456789876543210) where
      suppressUnusedWarnings = snd (((,) (:$$:@#@$$###)) ())
    data ($$:@#@$$) (a0123456789876543210 :: Bool) :: (~>) Bool Bool
      where
        (:$$:@#@$$###) :: forall a0123456789876543210
                                 a0123456789876543210
                                 arg. SameKind (Apply (($$:@#@$$) a0123456789876543210) arg) (($$:@#@$$$) a0123456789876543210 arg) =>
                          ($$:@#@$$) a0123456789876543210 a0123456789876543210
    type instance Apply (($$:@#@$$) a0123456789876543210) a0123456789876543210 = ($$:) a0123456789876543210 a0123456789876543210
    infixl 5 $$:@#@$$
    instance SuppressUnusedWarnings ($$:@#@$) where
      suppressUnusedWarnings = snd (((,) (:$$:@#@$###)) ())
    data ($$:@#@$) :: (~>) Bool ((~>) Bool Bool)
      where
        (:$$:@#@$###) :: forall a0123456789876543210
                                arg. SameKind (Apply ($$:@#@$) arg) (($$:@#@$$) arg) =>
                         ($$:@#@$) a0123456789876543210
    type instance Apply ($$:@#@$) a0123456789876543210 = ($$:@#@$$) a0123456789876543210
    infixl 5 $$:@#@$
    type family ($$:) (a :: Bool) (a :: Bool) :: Bool where
      ($$:) _ _ = FalseSym0
    infixl 5 %$$:
    (%$$:) ::
      forall (t :: Bool) (t :: Bool).
      Sing t -> Sing t -> Sing (Apply (Apply ($$:@#@$) t) t :: Bool)
    (%$$:) _ _ = SFalse
    instance SingI (($$:@#@$) :: (~>) Bool ((~>) Bool Bool)) where
      sing = (singFun2 @($$:@#@$)) (%$$:)
    instance SingI d =>
             SingI (($$:@#@$$) (d :: Bool) :: (~>) Bool Bool) where
      sing = (singFun1 @(($$:@#@$$) (d :: Bool))) ((%$$:) (sing @d))
